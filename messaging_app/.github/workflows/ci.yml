name: Django CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: test_messaging_app
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword
          MYSQL_ROOT_PASSWORD: rootpassword
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      DATABASE_URL: mysql://testuser:testpassword@127.0.0.1:3306/test_messaging_app
      DJANGO_SETTINGS_MODULE: messaging_app.settings.test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        cd messaging_app
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-django pytest-cov

    - name: Wait for MySQL
      run: |
        while ! mysqladmin ping -h 127.0.0.1 -P 3306 -u testuser -ptestpassword --silent; do
          echo 'Waiting for MySQL...'
          sleep 2
        done

    - name: Run Django migrations
      run: |
        cd messaging_app
        python manage.py migrate --settings=messaging_app.settings.test

    - name: Run tests
      run: |
        cd messaging_app
        python -m pytest --verbose --tb=short --junitxml=test-results.xml

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: messaging_app/test-results.xml